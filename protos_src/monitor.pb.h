/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_MONITOR_MONITOR_PB_H_INCLUDED
#define PB_MONITOR_MONITOR_PB_H_INCLUDED
#include <pb.h>
#include "util.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _monitor_Temperature_Element { 
    monitor_Temperature_Element_CPU = 1, 
    monitor_Temperature_Element_GPU = 2 
} monitor_Temperature_Element;

/* Struct definitions */
typedef struct _monitor_HelloAsync { 
    char dummy_field;
} monitor_HelloAsync;

typedef struct _monitor_TemperatureGetReq { 
    char dummy_field;
} monitor_TemperatureGetReq;

typedef struct _monitor_VersionGetReq { 
    char dummy_field;
} monitor_VersionGetReq;

typedef struct _monitor_Temperature { 
    bool has_element;
    monitor_Temperature_Element element; 
    bool has_temp;
    float temp; 
} monitor_Temperature;

typedef PB_BYTES_ARRAY_T(32) monitor_VersionGetRes_version_t;
typedef struct _monitor_VersionGetRes { 
    bool has_version;
    monitor_VersionGetRes_version_t version; 
} monitor_VersionGetRes;

typedef struct _monitor_TemperatureAsync { 
    pb_size_t temperatures_count;
    monitor_Temperature temperatures[10]; 
} monitor_TemperatureAsync;

typedef struct _monitor_TemperatureGetRes { 
    pb_size_t temperatures_count;
    monitor_Temperature temperatures[10]; 
} monitor_TemperatureGetRes;

typedef struct _monitor_MonitorMsg { 
    bool has_msg_status;
    util_MsgStatus msg_status; 
    bool has_uid;
    uint32_t uid; 
    bool has_timestamp;
    uint64_t timestamp; 
    pb_size_t which_msg;
    union {
        monitor_HelloAsync hello_async;
        monitor_TemperatureAsync temperature_async;
        monitor_TemperatureGetReq temperature_get_req;
        monitor_TemperatureGetRes temperature_get_res;
        monitor_VersionGetReq version_get_req;
        monitor_VersionGetRes version_get_res;
    } msg; 
} monitor_MonitorMsg;


/* Helper constants for enums */
#define _monitor_Temperature_Element_MIN monitor_Temperature_Element_CPU
#define _monitor_Temperature_Element_MAX monitor_Temperature_Element_GPU
#define _monitor_Temperature_Element_ARRAYSIZE ((monitor_Temperature_Element)(monitor_Temperature_Element_GPU+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define monitor_HelloAsync_init_default          {0}
#define monitor_Temperature_init_default         {false, _monitor_Temperature_Element_MIN, false, 0}
#define monitor_TemperatureAsync_init_default    {0, {monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default}}
#define monitor_TemperatureGetReq_init_default   {0}
#define monitor_TemperatureGetRes_init_default   {0, {monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default, monitor_Temperature_init_default}}
#define monitor_VersionGetReq_init_default       {0}
#define monitor_VersionGetRes_init_default       {false, {0, {0}}}
#define monitor_MonitorMsg_init_default          {false, _util_MsgStatus_MIN, false, 0, false, 0, 0, {monitor_HelloAsync_init_default}}
#define monitor_HelloAsync_init_zero             {0}
#define monitor_Temperature_init_zero            {false, _monitor_Temperature_Element_MIN, false, 0}
#define monitor_TemperatureAsync_init_zero       {0, {monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero}}
#define monitor_TemperatureGetReq_init_zero      {0}
#define monitor_TemperatureGetRes_init_zero      {0, {monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero, monitor_Temperature_init_zero}}
#define monitor_VersionGetReq_init_zero          {0}
#define monitor_VersionGetRes_init_zero          {false, {0, {0}}}
#define monitor_MonitorMsg_init_zero             {false, _util_MsgStatus_MIN, false, 0, false, 0, 0, {monitor_HelloAsync_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define monitor_Temperature_element_tag          1
#define monitor_Temperature_temp_tag             2
#define monitor_VersionGetRes_version_tag        1
#define monitor_TemperatureAsync_temperatures_tag 1
#define monitor_TemperatureGetRes_temperatures_tag 1
#define monitor_MonitorMsg_msg_status_tag        1
#define monitor_MonitorMsg_uid_tag               2
#define monitor_MonitorMsg_timestamp_tag         3
#define monitor_MonitorMsg_hello_async_tag       10
#define monitor_MonitorMsg_temperature_async_tag 11
#define monitor_MonitorMsg_temperature_get_req_tag 12
#define monitor_MonitorMsg_temperature_get_res_tag 13
#define monitor_MonitorMsg_version_get_req_tag   14
#define monitor_MonitorMsg_version_get_res_tag   15

/* Struct field encoding specification for nanopb */
#define monitor_HelloAsync_FIELDLIST(X, a) \

#define monitor_HelloAsync_CALLBACK NULL
#define monitor_HelloAsync_DEFAULT NULL

#define monitor_Temperature_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UENUM,    element,           1) \
X(a, STATIC,   OPTIONAL, FLOAT,    temp,              2)
#define monitor_Temperature_CALLBACK NULL
#define monitor_Temperature_DEFAULT (const pb_byte_t*)"\x08\x01\x00"

#define monitor_TemperatureAsync_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  temperatures,      1)
#define monitor_TemperatureAsync_CALLBACK NULL
#define monitor_TemperatureAsync_DEFAULT NULL
#define monitor_TemperatureAsync_temperatures_MSGTYPE monitor_Temperature

#define monitor_TemperatureGetReq_FIELDLIST(X, a) \

#define monitor_TemperatureGetReq_CALLBACK NULL
#define monitor_TemperatureGetReq_DEFAULT NULL

#define monitor_TemperatureGetRes_FIELDLIST(X, a) \
X(a, STATIC,   REPEATED, MESSAGE,  temperatures,      1)
#define monitor_TemperatureGetRes_CALLBACK NULL
#define monitor_TemperatureGetRes_DEFAULT NULL
#define monitor_TemperatureGetRes_temperatures_MSGTYPE monitor_Temperature

#define monitor_VersionGetReq_FIELDLIST(X, a) \

#define monitor_VersionGetReq_CALLBACK NULL
#define monitor_VersionGetReq_DEFAULT NULL

#define monitor_VersionGetRes_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, BYTES,    version,           1)
#define monitor_VersionGetRes_CALLBACK NULL
#define monitor_VersionGetRes_DEFAULT NULL

#define monitor_MonitorMsg_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UENUM,    msg_status,        1) \
X(a, STATIC,   OPTIONAL, UINT32,   uid,               2) \
X(a, STATIC,   OPTIONAL, UINT64,   timestamp,         3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,hello_async,msg.hello_async),  10) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,temperature_async,msg.temperature_async),  11) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,temperature_get_req,msg.temperature_get_req),  12) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,temperature_get_res,msg.temperature_get_res),  13) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,version_get_req,msg.version_get_req),  14) \
X(a, STATIC,   ONEOF,    MESSAGE,  (msg,version_get_res,msg.version_get_res),  15)
#define monitor_MonitorMsg_CALLBACK NULL
#define monitor_MonitorMsg_DEFAULT NULL
#define monitor_MonitorMsg_msg_hello_async_MSGTYPE monitor_HelloAsync
#define monitor_MonitorMsg_msg_temperature_async_MSGTYPE monitor_TemperatureAsync
#define monitor_MonitorMsg_msg_temperature_get_req_MSGTYPE monitor_TemperatureGetReq
#define monitor_MonitorMsg_msg_temperature_get_res_MSGTYPE monitor_TemperatureGetRes
#define monitor_MonitorMsg_msg_version_get_req_MSGTYPE monitor_VersionGetReq
#define monitor_MonitorMsg_msg_version_get_res_MSGTYPE monitor_VersionGetRes

extern const pb_msgdesc_t monitor_HelloAsync_msg;
extern const pb_msgdesc_t monitor_Temperature_msg;
extern const pb_msgdesc_t monitor_TemperatureAsync_msg;
extern const pb_msgdesc_t monitor_TemperatureGetReq_msg;
extern const pb_msgdesc_t monitor_TemperatureGetRes_msg;
extern const pb_msgdesc_t monitor_VersionGetReq_msg;
extern const pb_msgdesc_t monitor_VersionGetRes_msg;
extern const pb_msgdesc_t monitor_MonitorMsg_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define monitor_HelloAsync_fields &monitor_HelloAsync_msg
#define monitor_Temperature_fields &monitor_Temperature_msg
#define monitor_TemperatureAsync_fields &monitor_TemperatureAsync_msg
#define monitor_TemperatureGetReq_fields &monitor_TemperatureGetReq_msg
#define monitor_TemperatureGetRes_fields &monitor_TemperatureGetRes_msg
#define monitor_VersionGetReq_fields &monitor_VersionGetReq_msg
#define monitor_VersionGetRes_fields &monitor_VersionGetRes_msg
#define monitor_MonitorMsg_fields &monitor_MonitorMsg_msg

/* Maximum encoded size of messages (where known) */
#define monitor_HelloAsync_size                  0
#define monitor_MonitorMsg_size                  111
#define monitor_TemperatureAsync_size            90
#define monitor_TemperatureGetReq_size           0
#define monitor_TemperatureGetRes_size           90
#define monitor_Temperature_size                 7
#define monitor_VersionGetReq_size               0
#define monitor_VersionGetRes_size               34

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
